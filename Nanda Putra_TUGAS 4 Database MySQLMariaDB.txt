//////////////////////////////////////////////////////////////////////////// TUGAS 4 Database MySQLMariaD /////////////////////////////////////////////////////////////////////////////////

Microsoft Windows [Version 10.0.22631.4317]
(c) Microsoft Corporation. All rights reserved.

C:\Users\nanda putra>cd C:\xampp\mysql\bin

C:\xampp\mysql\bin>mysql -u root -p
Enter password:
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 50
Server version: 10.4.28-MariaDB mariadb.org binary distribution

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| classicmodels      |
| db_movieapp        |
| dblatihan          |
| dbpossi02          |
| dbtoko             |
| dbtransaksi        |
| dbwebanime         |
| financial_dw       |
| information_schema |
| mysql              |
| performance_schema |
| phpmyadmin         |
| sib7               |
| soal4_0110222069   |
| test               |
+--------------------+
15 rows in set (0.043 sec)

MariaDB [(none)]> USE dbpossi02
Database changed

//////////////////////////////////////////////////////////////////////////// SOAL 3.1 ///////////////////////////////////////////////////////////////////////////////////////////////////

================================================================= 1.	Tampilkan produk yang asset nya diatas 20jt ==============================================
MariaDB [dbpossi02]> SELECT * FROM produk WHERE harga_beli * stok > 20000000;
+----+------+------------------+------------+------------+------+----------+-----------------+
| id | kode | nama             | harga_beli | harga_jual | stok | min_stok | jenis_produk_id |
+----+------+------------------+------------+------------+------+----------+-----------------+
|  2 | TV02 | Televisi 40 inch |    5500000 |    7737600 |    5 |        2 |               1 |
|  6 | PC01 | PC Desktop HP    |    7000000 |    9600000 |    3 |        2 |               5 |
|  9 | LN01 | Notebook Lenovo  |    9000000 |   12000000 |    3 |        2 |               5 |
+----+------+------------------+------------+------------+------+----------+-----------------+
3 rows in set (0.035 sec)

================================================================== 2.	Tampilkan data produk beserta selisih stok dengan minimal stok ================================
MariaDB [dbpossi02]> SELECT SUM(stok - min_stok) as selisih from produk;
+---------+
| selisih |
+---------+
|      24 |
+---------+
1 row in set (0.009 sec)

================================================================ 3.	Tampilkan total asset produk secara keseluruhan ============================================
MariaDB [dbpossi02]> SELECT sum(stok) as total_asset from produk;
+-------------+
| total_asset |
+-------------+
|          57 |
+-------------+
1 row in set (0.010 sec)

=========================================================== 4.	Tampilkan data pelanggan yang lahirnya antara tahun 1980 sampai 1990 =============================
MariaDB [dbpossi02]> SELECT * FROM pelanggan WHERE YEAR(tgl_lahir) BETWEEN 1999 AND 2004;
Empty set (0.012 sec)

=========================================================== 5.	Tampilkan data pelanggan yang lahirnya tahun 1998 =================================================
MariaDB [dbpossi02]> SELECT * FROM pelanggan WHERE YEAR(tgl_lahir)=1998;
Empty set (0.004 sec)

============================================================ 6.	Tampilkan data pelanggan yang berulang tahun bulan agustus =======================================
MariaDB [dbpossi02]> SELECT * FROM pelanggan WHERE MONTH(tgl_lahir)=08;
Empty set (0.003 sec)

=========================== 7.	Tampilkan data pelanggan : nama, tmp_lahir, tgl_lahir dan umur (selisih tahun sekarang dikurang tahun kelahiran) ================
MariaDB [dbpossi02]> SELECT nama, tmp_lahir, tgl_lahir, (YEAR(NOW())-YEAR(tgl_lahir)) AS umur FROM pelanggan;
+---------------+------------+------------+------+
| nama          | tmp_lahir  | tgl_lahir  | umur |
+---------------+------------+------------+------+
| Agung Sedayu  | Solo       | 2010-01-01 |   14 |
| Pandan Wangi  | Yogyakarta | 1950-01-01 |   74 |
| Sekar Mirah   | Kediri     | 1983-02-20 |   41 |
| Swandaru Geni | Kediri     | 1981-01-04 |   43 |
| Pradabashu    | Pati       | 1985-04-02 |   39 |
| Gayatri Dwi   | Jakarta    | 1987-11-28 |   37 |
| Dewi Gyat     | Jakarta    | 1988-12-01 |   36 |
| Andre Haru    | Surabaya   | 1990-07-15 |   34 |
| Ahmad Hasan   | Surabaya   | 1992-10-15 |   32 |
| Cassanndra    | Belfast    | 1990-11-20 |   34 |
+---------------+------------+------------+------+
10 rows in set (0.010 sec)

///////////////////////////////////////////////////////////////////// SOAL 3.2 //////////////////////////////////////////////////////////////////////////////////////

==================================================================== 1.	Menampilkan berapa jumlah pelanggan yang tahun lahirnya 1998 ============================================
MariaDB [dbpossi02]> SELECT COUNT(*) AS jumlah_pelanggan FROM pelanggan WHERE YEAR(tgl_lahir) = 1998;
+------------------+
| jumlah_pelanggan |
+------------------+
|                0 |
+------------------+
1 row in set (0.017 sec)

==============================================  2. Menampilkan Berapa jumlah pelanggan perempuan yang tempat lahirnya di Jakarta ========================================
MariaDB [dbpossi02]> SELECT COUNT(*) AS jumlah_pelanggan_perempuan FROM pelanggan WHERE tmp_lahir = 'Jakarta' AND jk = 'Perempuan';
+----------------------------+
| jumlah_pelanggan_perempuan |
+----------------------------+
|                          0 |
+----------------------------+
1 row in set (0.010 sec)

================================================ 3. Menampilkan berapa jumlah total stok semua produk yang harga jualnya dibawah 10rb ===============================================
MariaDB [dbpossi02]> SELECT SUM(stok) AS total_stok FROM produk WHERE harga_jual < 10000;
+------------+
| total_stok |
+------------+
|         39 |
+------------+
1 row in set (0.003 sec)

================================================= 4. Menampilkan ada berapa produk yang mempunyai kode awal K =======================================================
MariaDB [dbpossi02]> SELECT COUNT(*) AS jumlah_produk FROM produk WHERE kode LIKE 'K%';
+---------------+
| jumlah_produk |
+---------------+
|             1 |
+---------------+
1 row in set (0.016 sec)

=============================================== 5. Menampilkan erapa harga jual rata-rata produk yang diatas 1jt =========================================================
MariaDB [dbpossi02]> SELECT AVG(harga_jual) AS rata_rata_harga FROM produk WHERE harga_jual > 1000000;
+-----------------+
| rata_rata_harga |
+-----------------+
|         8374400 |
+-----------------+
1 row in set (0.003 sec)

=============================================== 6. Menampilkan jumlah stok yang paling besar ============================================================================
MariaDB [dbpossi02]> SELECT MAX(stok) AS stok_terbesar FROM produk;
+---------------+
| stok_terbesar |
+---------------+
|            39 |
+---------------+
1 row in set (0.004 sec)

=============================================== 7. Menampilkan ada berapa produk yang stoknya kurang dari minimal stok ====================================================
MariaDB [dbpossi02]> SELECT COUNT(*) AS jumlah_produk_kurang_stok FROM produk WHERE stok < min_stok;
+---------------------------+
| jumlah_produk_kurang_stok |
+---------------------------+
|                         3 |
+---------------------------+
1 row in set (0.003 sec)

================================================ 8. Menampilkan ada berapa total asset dari keseluruhan produk ===================================================
MariaDB [dbpossi02]> SELECT SUM(harga_beli * stok) AS total_asset FROM produk;
+-------------+
| total_asset |
+-------------+
|    86578000 |
+-------------+
1 row in set (0.001 sec)

MariaDB [dbpossi02]>

///////////////////////////////////////////////////////////////////////////////////////// SOAL 3.3 //////////////////////////////////////////////////////////////////////

===1.Tampilkan data produk : id, nama, stok dan informasi jika stok telah sampai batas minimal atau kurang dari minimum stok dengan informasi ‘segera belanja’ jika tidak ‘stok aman’.===
MariaDB [dbpossi02]> SELECT id, nama, stok,
    -> CASE
    ->     WHEN stok <= min_stok THEN 'segera belanja'
    ->     ELSE 'stok aman'
    -> END AS status_stok
    -> FROM produk;
+----+------------------+------+----------------+
| id | nama             | stok | status_stok    |
+----+------------------+------+----------------+
|  1 | Televisi 21 inch | NULL | stok aman      |
|  2 | Televisi 40 inch |    5 | stok aman      |
|  3 | Kulkas 2 pintu   |    0 | segera belanja |
|  4 | Meja Makan       |    6 | stok aman      |
|  5 | Teh Kotak        |    0 | segera belanja |
|  6 | PC Desktop HP    |    3 | stok aman      |
|  7 | Teh Botol        |   39 | stok aman      |
|  8 | Notebook Acer    |    1 | segera belanja |
|  9 | Notebook Lenovo  |    3 | stok aman      |
+----+------------------+------+----------------+
9 rows in set (0.004 sec)

================ 2.Tampilkan data pelanggan: id, nama, umur dan kategori umur : jika umur < 17 → ‘muda’ , 17-55 → ‘Dewasa’, selainnya ‘Tua’ ===========================================
MariaDB [dbpossi02]> SELECT id, nama, (YEAR(NOW()) - YEAR(tgl_lahir)) AS umur,
    -> CASE
    -> WHEN (YEAR(NOW()) - YEAR(tgl_lahir)) < 17 THEN 'Muda'
    -> WHEN (YEAR(NOW()) - YEAR(tgl_lahir)) BETWEEN 17 AND 55 THEN 'Dewasa'
    -> ELSE 'Tua'
    -> END AS kategori_umur
    -> FROM pelanggan;
+----+---------------+------+---------------+
| id | nama          | umur | kategori_umur |
+----+---------------+------+---------------+
|  1 | Agung Sedayu  |   14 | Muda          |
|  2 | Pandan Wangi  |   74 | Tua           |
|  3 | Sekar Mirah   |   41 | Dewasa        |
|  4 | Swandaru Geni |   43 | Dewasa        |
|  5 | Pradabashu    |   39 | Dewasa        |
|  6 | Gayatri Dwi   |   37 | Dewasa        |
|  7 | Dewi Gyat     |   36 | Dewasa        |
|  8 | Andre Haru    |   34 | Dewasa        |
|  9 | Ahmad Hasan   |   32 | Dewasa        |
| 10 | Cassanndra    |   34 | Dewasa        |
+----+---------------+------+---------------+
10 rows in set (0.036 sec)

===========================3.Tampilkan data produk: id, kode, nama, dan bonus untuk kode ‘TV01’ →’DVD Player’ , ‘K001’ → ‘Rice Cooker’ selain dari diatas ‘Tidak Ada’==================
MariaDB [dbpossi02]> SELECT id, kode, nama,
    -> CASE
    -> WHEN kode = 'TV01' THEN 'DVD Player'
    -> WHEN kode = 'K001' THEN 'Rice Cooker'
    -> ELSE 'Tidak Ada'
    -> END AS bonus
    -> FROM produk;
+----+------+------------------+-------------+
| id | kode | nama             | bonus       |
+----+------+------------------+-------------+
|  1 | TV01 | Televisi 21 inch | DVD Player  |
|  2 | TV02 | Televisi 40 inch | Tidak Ada   |
|  3 | K001 | Kulkas 2 pintu   | Rice Cooker |
|  4 | M001 | Meja Makan       | Tidak Ada   |
|  5 | TK01 | Teh Kotak        | Tidak Ada   |
|  6 | PC01 | PC Desktop HP    | Tidak Ada   |
|  7 | TB01 | Teh Botol        | Tidak Ada   |
|  8 | AC01 | Notebook Acer    | Tidak Ada   |
|  9 | LN01 | Notebook Lenovo  | Tidak Ada   |
+----+------+------------------+-------------+
9 rows in set (0.002 sec)

MariaDB [dbpossi02]>

////////////////////////////////////////////////////////////////////// SOAL 3.4 ////////////////////////////////////////////////////////////////////////////////////////////////////

==========================================================1.	Tampilkan data statistik jumlah tempat lahir pelanggan =============================================== 
MariaDB [dbpossi02]> SELECT tmp_lahir, COUNT(*) AS jumlah_pelanggan
    -> FROM pelanggan
    -> GROUP BY tmp_lahir;
+------------+------------------+
| tmp_lahir  | jumlah_pelanggan |
+------------+------------------+
| Belfast    |                1 |
| Jakarta    |                2 |
| Kediri     |                2 |
| Pati       |                1 |
| Solo       |                1 |
| Surabaya   |                2 |
| Yogyakarta |                1 |
+------------+------------------+
7 rows in set (0.019 sec)

====================================================== 2.	Tampilkan jumlah statistik produk berdasarkan jenis produk ===============================================
MariaDB [dbpossi02]> SELECT jenis_produk_id, COUNT(*) AS jumlah_produk
    -> FROM produk
    -> GROUP BY jenis_produk_id;
+-----------------+---------------+
| jenis_produk_id | jumlah_produk |
+-----------------+---------------+
|               1 |             3 |
|               2 |             1 |
|               4 |             2 |
|               5 |             3 |
+-----------------+---------------+
4 rows in set (0.011 sec)

======================================================== 3.	Tampilkan data pelanggan yang usianya dibawah rata usia pelanggan =======================================
MariaDB [dbpossi02]> SELECT id, nama, (YEAR(NOW()) - YEAR(tgl_lahir)) AS umur
    -> FROM pelanggan
    -> WHERE (YEAR(NOW()) - YEAR(tgl_lahir)) < (SELECT AVG(YEAR(NOW()) - YEAR(tgl_lahir)) FROM pelanggan);
+----+--------------+------+
| id | nama         | umur |
+----+--------------+------+
|  1 | Agung Sedayu |   14 |
|  6 | Gayatri Dwi  |   37 |
|  7 | Dewi Gyat    |   36 |
|  8 | Andre Haru   |   34 |
|  9 | Ahmad Hasan  |   32 |
| 10 | Cassanndra   |   34 |
+----+--------------+------+
6 rows in set (0.030 sec)

======================================================== 4.	Tampilkan data produk yang harganya diatas rata-rata harga produk ===================================
MariaDB [dbpossi02]> SELECT id, kode, nama, harga_jual
    -> FROM produk
    -> WHERE harga_jual > (SELECT AVG(harga_jual) FROM produk);
+----+------+------------------+------------+
| id | kode | nama             | harga_jual |
+----+------+------------------+------------+
|  2 | TV02 | Televisi 40 inch |    7737600 |
|  6 | PC01 | PC Desktop HP    |    9600000 |
|  8 | AC01 | Notebook Acer    |   10800000 |
|  9 | LN01 | Notebook Lenovo  |   12000000 |
+----+------+------------------+------------+
4 rows in set (0.008 sec)

========================================================= 5.	Tampilkan data pelanggan yang memiliki kartu dimana iuran tahunan kartu diatas 90rb =========================
MariaDB [dbpossi02]> SELECT pelanggan.id, pelanggan.nama
    -> FROM pelanggan
    -> JOIN kartu ON pelanggan.kartu_id = kartu.id
    -> WHERE kartu.iuran > 90000;
+----+--------------+
| id | nama         |
+----+--------------+
|  1 | Agung Sedayu |
|  2 | Pandan Wangi |
|  3 | Sekar Mirah  |
|  5 | Pradabashu   |
|  6 | Gayatri Dwi  |
|  7 | Dewi Gyat    |
| 10 | Cassanndra   |
+----+--------------+
7 rows in set (0.007 sec)

====================================================== 6.	Tampilkan statistik data produk dimana harga produknya dibawah rata-rata harga produk secara keseluruhan ==============
MariaDB [dbpossi02]> SELECT COUNT(*) AS jumlah_produk_bawah_rata, AVG(harga_jual) AS rata_rata_harga_bawah
    -> FROM produk
    -> WHERE harga_jual < (SELECT AVG(harga_jual) FROM produk);
+--------------------------+-----------------------+
| jumlah_produk_bawah_rata | rata_rata_harga_bawah |
+--------------------------+-----------------------+
|                        5 |               2155212 |
+--------------------------+-----------------------+
1 row in set (0.002 sec)

====================================================== 7.	Tampilkan data pelanggan yang memiliki kartu dimana diskon kartu yang diberikan diatas 3% ===========================
MariaDB [dbpossi02]> SELECT pelanggan.id, pelanggan.nama
    -> FROM pelanggan
    -> JOIN kartu ON pelanggan.kartu_id = kartu.id
    -> WHERE kartu.diskon > 3;
Empty set (0.002 sec)