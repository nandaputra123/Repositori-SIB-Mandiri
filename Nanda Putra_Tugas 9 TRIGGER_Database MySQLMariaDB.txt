/////////////////////////////////// SOAL 6.2 //////////////////////////////////////////////////////////////////////
1.1
ALTER TABLE pembayaran ADD status_pembayaran VARCHAR(25) DEFAULT 'Belum Lunas';

MariaDB [dbpossi02]> SELECT * FROM pembayaran;
+----+-------------+------------+-----------+------+------------+-------------------+
| id | no_kuitansi | tanggal    | jumlah    | ke   | pesanan_id | status_pembayaran |
+----+-------------+------------+-----------+------+------------+-------------------+
|  1 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Lunas             |
|  2 | KWI001      | 2024-10-26 | 200000.00 |    1 |          1 | Belum Lunas       |
|  3 | KWI003      | 2024-10-26 | 150000.00 |    1 |          1 | Belum Lunas       |
|  4 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Belum Lunas       |
+----+-------------+------------+-----------+------+------------+-------------------+
4 rows in set (0.146 sec)

1.2
MariaDB [dbpossi02]> DELIMITER $$
MariaDB [dbpossi02]> CREATE TRIGGER cek_pembayaran
    -> BEFORE INSERT ON pembayaran
    -> FOR EACH ROW
    -> BEGIN
    -> DECLARE total_bayar DECIMAL(10, 2) DEFAULT 0;
    -> DECLARE total_pesanan DECIMAL(10, 2);
    ->
    ->     -- Mengambil total pembayaran sebelumnya
    -> SELECT IFNULL(SUM(jumlah), 0) INTO total_bayar
    -> FROM pembayaran
    -> WHERE pesanan_id = NEW.pesanan_id;
    ->
    ->     -- Mengambil total pesanan
    -> SELECT total INTO total_pesanan
    -> FROM pesanan
    -> WHERE id = NEW.pesanan_id;
    ->
    ->     -- Update status pembayaran
    -> IF total_bayar + NEW.jumlah >= total_pesanan THEN
    -> SET NEW.status_pembayaran = 'Lunas';
    -> ELSE
    -> SET NEW.status_pembayaran = 'Belum Lunas';
    -> END IF;
    -> END $$
Query OK, 0 rows affected (0.016 sec)
MariaDB [dbpossi02]> DELIMITER ;

MariaDB [dbpossi02]> SELECT * FROM pembayaran;
+----+-------------+------------+-----------+------+------------+-------------------+
| id | no_kuitansi | tanggal    | jumlah    | ke   | pesanan_id | status_pembayaran |
+----+-------------+------------+-----------+------+------------+-------------------+
|  1 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Lunas             | //////////////////// Menampilkan Semua Data di Tabel pembayaran:
|  2 | KWI001      | 2024-10-26 | 200000.00 |    1 |          1 | Belum Lunas       |
|  3 | KWI003      | 2024-10-26 | 150000.00 |    1 |          1 | Belum Lunas       |
|  4 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Belum Lunas       |
+----+-------------+------------+-----------+------+------------+-------------------+
4 rows in set (0.006 sec)


MariaDB [dbpossi02]> SELECT id, pesanan_id, jumlah, status_pembayaran FROM pembayaran;
+----+------------+-----------+-------------------+
| id | pesanan_id | jumlah    | status_pembayaran |
+----+------------+-----------+-------------------+
|  1 |          1 | 200000.00 | Lunas             |
|  2 |          1 | 200000.00 | Belum Lunas       | ////////////////////////// Menampilkan Data dengan Kolom Tertentu
|  3 |          1 | 150000.00 | Belum Lunas       |
|  4 |          1 | 200000.00 | Belum Lunas       |
+----+------------+-----------+-------------------+
4 rows in set (0.004 sec)

MariaDB [dbpossi02]>
MariaDB [dbpossi02]> SELECT * FROM pembayaran WHERE status_pembayaran = 'Lunas';
+----+-------------+------------+-----------+------+------------+-------------------+
| id | no_kuitansi | tanggal    | jumlah    | ke   | pesanan_id | status_pembayaran |
+----+-------------+------------+-----------+------+------------+-------------------+ ///////////// Menampilkan Data dengan Kondisi Untuk melihat data dengan kondisi berstatus Lunas
|  1 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Lunas             |
+----+-------------+------------+-----------+------+------------+-------------------+
1 row in set (0.010 sec)

MariaDB [dbpossi02]> INSERT INTO pembayaran (no_kuitansi, tanggal, jumlah, ke, pesanan_id)
    -> VALUES ('K123', '2024-10-28', 200000, 1, 1);
Query OK, 1 row affected (0.035 sec) /////////////////////////////////////////////////////////// Menguji Trigger dengan Memasukkan Data Baru

ariaDB [dbpossi02]> SELECT * FROM pembayaran;
+----+-------------+------------+-----------+------+------------+-------------------+
| id | no_kuitansi | tanggal    | jumlah    | ke   | pesanan_id | status_pembayaran |
+----+-------------+------------+-----------+------+------------+-------------------+
|  1 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Lunas             |
|  2 | KWI001      | 2024-10-26 | 200000.00 |    1 |          1 | Belum Lunas       | /////////////// menampilkan trigger dengan data baru
|  3 | KWI003      | 2024-10-26 | 150000.00 |    1 |          1 | Belum Lunas       |
|  4 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Belum Lunas       |
|  5 | K123        | 2024-10-28 | 200000.00 |    1 |          1 | Belum Lunas       |
+----+-------------+------------+-----------+------+------------+-------------------+
5 rows in set (0.001 sec)

MariaDB [dbpossi02]>

1.3
MariaDB [dbpossi02]> INSERT INTO pembayaran (no_kuitansi, tanggal, jumlah, ke, pesanan_id)
    -> VALUES ('KWI001', '2023-03-03', 200000, 1, 1);
Query OK, 1 row affected (0.010 sec)

MariaDB [dbpossi02]> SELECT * FROM pembayaran WHERE no_kuitansi = 'KWI001';
+----+-------------+------------+-----------+------+------------+-------------------+
| id | no_kuitansi | tanggal    | jumlah    | ke   | pesanan_id | status_pembayaran |
+----+-------------+------------+-----------+------+------------+-------------------+
|  1 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Lunas             |
|  2 | KWI001      | 2024-10-26 | 200000.00 |    1 |          1 | Belum Lunas       |
|  4 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Belum Lunas       |
|  6 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Belum Lunas       |
+----+-------------+------------+-----------+------+------------+-------------------+
4 rows in set (0.002 sec)

MariaDB [dbpossi02]> SELECT * FROM pembayaran;
+----+-------------+------------+-----------+------+------------+-------------------+
| id | no_kuitansi | tanggal    | jumlah    | ke   | pesanan_id | status_pembayaran |
+----+-------------+------------+-----------+------+------------+-------------------+
|  1 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Lunas             |
|  2 | KWI001      | 2024-10-26 | 200000.00 |    1 |          1 | Belum Lunas       |
|  3 | KWI003      | 2024-10-26 | 150000.00 |    1 |          1 | Belum Lunas       |
|  4 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Belum Lunas       |
|  5 | K123        | 2024-10-28 | 200000.00 |    1 |          1 | Belum Lunas       |
|  6 | KWI001      | 2023-03-03 | 200000.00 |    1 |          1 | Belum Lunas       |
+----+-------------+------------+-----------+------+------------+-------------------+
6 rows in set (0.002 sec)

2. 
Buatlah Stored Procedure dengan nama kurangi_stok untuk mengurangi stok produk. Stok berkurang sesuai dengan jumlah pesanan produk.

MariaDB [dbpossi02]> CREATE PROCEDURE kurangi_stok (
    ->     IN p_produk_id INT,
    ->     IN p_jumlah INT
    -> )
    -> BEGIN
    -> DECLARE stok_tersedia INT;
    ->
    -> -- Mengambil stok yang tersedia untuk produk yang diberikan
    -> SELECT stok INTO stok_tersedia
    -> FROM produk
    -> WHERE id = p_produk_id;
    ->
    -> -- Cek apakah stok mencukupi
    -> IF stok_tersedia >= p_jumlah THEN
    -> -- Mengurangi stok sesuai dengan jumlah pesanan
    -> UPDATE produk
    -> SET stok = stok - p_jumlah
    -> WHERE id = p_produk_id;
    -> ELSE
    -> -- Jika stok tidak mencukupi, tampilkan pesan peringatan
    -> SIGNAL SQLSTATE '45000'
    -> SET MESSAGE_TEXT = 'Stok produk tidak mencukupi';
    -> END IF;
    -> END $$
Query OK, 0 rows affected (0.006 sec)
MariaDB [dbpossi02]> DELIMITER ;
MariaDB [dbpossi02]>

MariaDB [dbpossi02]> UPDATE produk SET stok = 0 WHERE id = 1;
Query OK, 1 row affected (0.008 sec)
Rows matched: 1  Changed: 1  Warnings: 0 /////////////////////////// Memperbaiki nilai stock

MariaDB [dbpossi02]> UPDATE produk SET stok = 10 WHERE id = 1;
Query OK, 1 row affected (0.005 sec)
Rows matched: 1  Changed: 1  Warnings: 0 //////////////////// Menambahkan stock yang cukup

MariaDB [dbpossi02]> SELECT id, stok FROM produk WHERE id = 1;
+----+------+
| id | stok |
+----+------+
|  1 |   10 |
+----+------+
1 row in set (0.001 sec) //////////////////////// Melihat nilai stok kembabali

MariaDB [dbpossi02]> CALL kurangi_stok(1, 5);
Query OK, 2 rows affected (0.008 sec) ////////////// Prosedur pengurangan stok berhasil

MariaDB [dbpossi02]>  

3. 
Buatlah Trigger dengan nama trig_kurangi_stok yang akan mengurangi stok produk jika terjadi transaksi pesanan oleh pelanggan (memanggil stored procedure kurangi_stok soal no 2).
Trigger ini aktif setelah trigger after_pesanan_items_insert (trigger pada contoh 3).

MariaDB [dbpossi02]> CREATE TRIGGER trig_kurangi_stok
    -> AFTER INSERT ON pesanan_items  -- Trigger ini aktif setelah insert pada tabel pesanan_items
    -> FOR EACH ROW
    -> BEGIN
    -> --- Memanggil stored procedure kurangi_stok
    -> CALL kurangi_stok(NEW.produk_id, NEW.qty);  
    -> END $$
Query OK, 0 rows affected (0.016 sec)

MariaDB [dbpossi02]>
MariaDB [dbpossi02]> DELIMITER ;
MariaDB [dbpossi02]> SHOW CREATE TRIGGER trig_kurangi_stok;
+-------------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------+----------------------+--------------------+------------------------+
| Trigger           | sql_mode                                            | SQL Original Statement

     | character_set_client | collation_connection | Database Collation | Created                |
+-------------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------+----------------------+--------------------+------------------------+
| trig_kurangi_stok | NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION | CREATE DEFINER=`root`@`localhost` TRIGGER trig_kurangi_stok
AFTER INSERT ON pesanan_items
FOR EACH ROW
BEGIN

    CALL kurangi_stok(NEW.produk_id, NEW.qty);
END | cp850                | cp850_general_ci     | utf8mb4_general_ci | 2024-10-28 10:49:44.50 |
+-------------------+-----------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------+----------------------+--------------------+------------------------+
1 row in set (0.008 sec)

MariaDB [dbpossi02]>

MariaDB [dbpossi02]> UPDATE produk SET stok = stok + 10 WHERE id = 1;
Query OK, 1 row affected (0.008 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [dbpossi02]> INSERT INTO pesanan_items (produk_id, qty, pesanan_id) VALUES (1, 3, 1);
Query OK, 1 row affected (0.007 sec) ////////////////////////////////////////////////// Menjalankan trigger

MariaDB [dbpossi02]>
